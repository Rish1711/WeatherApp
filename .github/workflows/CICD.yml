name: Test, Build, and Deploy to Minikube

on:
  push:
    branches:
      - main
    paths:
      - '**/*'

jobs:
  # Build Job
  build:
    runs-on: ubuntu-latest

    steps:
    # Checkout code from the repository
    - name: Checkout code
      uses: actions/checkout@v2

    # Set up Python environment
    - name: Setup Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'

    # Set up Docker buildx
    - name: Docker Setup
      uses: docker/setup-buildx-action@v2

    # Install dependencies
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install flake8
        
    # Run Linting tests
    - name: Run Linting tests
      run: |
        flake8 --ignore=E501,F401 .

    # Log in to Docker registry
    - name: Docker Credentials
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # Generate version tag for the Docker image
    - name: Docker tag
      id: version
      run: |
        VERSION=v$(date +"%Y%m%d%H%M%S")
        echo "VERSION=$VERSION" >> $GITHUB_ENV

    # Build the Docker image
    - name: Build Docker Image
      run: |
        docker build . -t rg171195/demo-app:${{ env.VERSION }}

    # Push the Docker image to the registry
    - name: Push Docker Image
      run: |
        docker push rg171195/demo-app:${{ env.VERSION }}

    # Update Kubernetes manifests with the new image version
    - name: Update K8s Manifests
      run: |
        cat deploy/deploy.yaml
        sed -i "s|image: rg171195/demo-app:.*|image: rg171195/demo-app:${{ env.VERSION }}|g" deploy/deploy.yaml
        cat deploy/deploy.yaml

    # Commit changes to the repository
    - name: Commit the changes
      run: |
        git config --global user.email "<your-email>"
        git config --global user.name "GitHub Actions Bot"
        git add deploy/deploy.yaml
        git commit -m "Update deploy.yaml with new image version - ${{ env.VERSION }}"
        git push origin main

  # Deploy to Minikube Job
  deploy-to-minikube:
    runs-on: ubuntu-latest
    needs: build  # Ensure the build job completes first

    steps:
    # Set up Kubernetes kubeconfig using secrets
    - name: Set up Kubernetes kubeconfig
      run: |
        mkdir -p ~/.kube
        echo "$KUBECONFIG" > ~/.kube/config
        mkdir -p ~/.minikube/profiles/minikube  # Create missing directory
        echo "$MINIKUBE_CLIENT_CERT" > ~/.minikube/profiles/minikube/client.crt
        echo "$MINIKUBE_CLIENT_KEY" > ~/.minikube/profiles/minikube/client.key
        echo "$MINIKUBE_CA_CERT" > ~/.minikube/ca.crt
        

    # Deploy to Minikube
    - name: Deploy to Minikube
      run: |
        kubectl set image deployment/your-deployment-name your-container-name=rg171195/demo-app:${{ env.VERSION }}
        kubectl rollout status deployment/your-deployment-name

    # Optional: Verify the deployment
    - name: Verify deployment
      run: |
        kubectl get pods
